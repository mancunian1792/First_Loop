var async = require("async")


module.exports = function(Message) {
  Message.greet = function(msg, cb) {
    process.nextTick(function() {
      msg = msg || 'hello';
      cb(null, 'Sender says ' + msg + ' to receiver');
    });
  };

  // Create a custom api that is not generated by  loopback
  // what does this  do ?? -- Based on the time it gives out greetings// Create a custom api that is not generated by  loopback
  // what does this  do ?? -- Based on the time it gives out greetingss

  Message.customGreet = function(cb){
    console.log("AM I BEING CALLED");
    const currDate=new Date();
    const currhours=currDate.getHours();
    var msg="Good";
    if(currhours < 12){
      msg=msg+'Morning'
    }else if(currhours <18){
      msg=msg+'Afternoon'
    }else{
      msg=msg+'Night'
    }

    async.series([
	    function functionOne(callback) {
        console.log("msg in first series");
        		callback(null, 'RESULT OF FUNCTION ONE');
    	},
    	function functionTwo(callback) {
            console.log("msg in second series");
        		callback(null, 'RESULT OF FUNCTION TWO');
    	},
    	function functionThree(callback) {
        console.log("msg in third series ");
        		callback(null, 'RESULT OF FUNCTION Three');
	    }
], function(err, result) {
  if(err){
    console.log(err);
  }else{
    console.log(result);
  }

})

    cb(null,msg); // cb is a standard way of defining a callback function.
  }

  Message.remoteMethod('customGreet',{
    http:{path:"/customGreet",verb:'get'},// path defines the custom path name via which you want to access this api and the verb defines the http protocol.
    returns:{arg:"greet",type:'string'} // arg is the JSON key and the type defines the datatype of the value.
  });
};
